#!/usr/bin/env python3

'''
  Source code listing

  Copyright 2013-2018 RIKEN
  Copyright 2018-2020 Chiba Institute of Technology

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
'''

__author__ = 'Masatomo Hashimoto <m.hashimoto@stair.center>'

import os
import sys
import simplejson

from common import OUTLINE_DIR, TARGET_DIR, DEFAULT_USER, BASE_URL

###

LINK_FMT = '''<tr>
<td>
<form style="margin:0;" action="tree" method="GET" target="_blank">
<input type="hidden" name="user" value="%(user)s">
<input type="hidden" name="proj" value="%(proj)s">
<input type="hidden" name="ver" value="%(ver)s">
<input type="hidden" name="path" value="%(path)s">
<button class="src" type="submit" name="fid" value="%(fid)s">%(path)s</button>
</form>
</td>
</tr>'''


TEMPL = '''Content-Type: text/html

%s
'''

HTML_TEMPL = '''<html>
<head>
<title>%(proj)s[%(ver)s] Sources</title>
<link rel="stylesheet" href="%(base_url)s/demo.css" />
</head>
<body>

<!--<h1>%(user)s</h1>-->
<h2>%(proj)s</h2>
<h3>%(ver)s</h3>

<div>
<table style="margin:8px;">
%(content)s
</table>
</div>

</body>
</html>
'''

#

def is_target(proj, ver, path):
    b = True
    p = os.path.join(TARGET_DIR, proj, 'roots-%s.json' % ver)
    try:
        with open(p, 'r') as f:
            paths = simplejson.load(f)
            if path not in paths:
                b = False

    except Exception as e:
        pass

    return b

###

import cgi
import cgitb
cgitb.enable()

form = cgi.FieldStorage()

user = form.getvalue('user', DEFAULT_USER)
proj = form.getvalue('proj', None)
ver  = form.getvalue('ver', None)

target_only = form.getvalue('target_only', False)
if target_only:
    if target_only == '0' or target_only.lower() == 'false':
        target_only = False

content = 'FAILED'

ver_path = os.path.join(OUTLINE_DIR, proj, 'v', ver)

if proj and ver:
    path_list = []
    fid_list = []

    try:
        with open(os.path.join(ver_path, 'path_list.json'), 'r') as plf:
            path_list = simplejson.load(plf)

        with open(os.path.join(ver_path, 'fid_list.json'), 'r') as flf:
            fid_list = simplejson.load(flf)

    except Exception as e:
        content = str(e)

    if path_list and fid_list:
        try:
            with open(os.path.join(ver_path, 'index.json'), 'r') as f:
                vi_tbl = simplejson.load(f)

                d = {
                    'user' : user,
                    'proj' : proj, 
                    'ver'  : ver,
                }
                links = []

                path_tbl = vi_tbl.get('path_tbl', {})

                if path_tbl:
                    for (pathi, fidi) in path_tbl.items():
                        path = path_list[int(pathi)]
                        d['path'] = path
                        d['fid'] = fid_list[fidi]

                        cond = True
                        if target_only:
                            cond = is_target(proj, ver, path)

                        if cond:
                            links.append((path, LINK_FMT % d))

                links.sort(key=lambda x: x[0])

                links = [x[1] for x in links]

                content = HTML_TEMPL % {
                    'user'     : user,
                    'proj'     : proj,
                    'ver'      : ver,
                    'base_url' : BASE_URL,
                    'content'  : '\n'.join(links),
                }

        except Exception as e:
            content = str(e)


sys.stdout.write(TEMPL % content)
