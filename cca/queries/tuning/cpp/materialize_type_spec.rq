#
# Copyright 2013-2018 RIKEN
# Copyright 2018-2020 Chiba Institute of Technology
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Author: Masatomo Hashimoto <m.hashimoto@stair.center>


DEFINE input:inference "ont.cpi"

PREFIX fb:      <http://codinuum.com/fb/>
PREFIX ent:     <http://codinuum.com/fact/entity/>
PREFIX variant: <http://codinuum.com/fact/version/variant/>
PREFIX rel:     <http://codinuum.com/fact/version/release/>
PREFIX svn:     <http://codinuum.com/fact/version/svn/revision/>
PREFIX src:     <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:     <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX cpp:     <http://codinuum.com/ontologies/2019/02/cpp-entity#>

INSERT {
  ?use cpp:declarator ?dtor .
  ?dtor cpp:declarationTypeSpec ?tspec .
}
WHERE {

  ?dtor a cpp:Declarator ;
        src:binding ?bid .

  ?use a cpp:Entity ;
       cpp:inContainerUnit ?cu ;
       src:binding ?bid .

  FILTER NOT EXISTS {
    ?use a cpp:Declarator .
  }

  FILTER (?use != ?dtor)

  OPTIONAL {
    ?tspec a cpp:TypeSpecifier .
    {
      ?dtor src:children/rdf:first ?tspec .
    }
    UNION
    {
      ?dtor src:parent/src:children/rdf:first ?tspec .
    }
  }

  # {
  #   SELECT DISTINCT ?dtor ?bid ?tspec
  #   WHERE {

  #     ?dtor a cpp:Declarator ;
  #           src:binding ?bid .

  #     OPTIONAL {
  #       ?tspec a cpp:TypeSpecifier .
  #       {
  #         ?dtor src:children/rdf:first ?tspec .
  #       }
  #       UNION
  #       {
  #         ?dtor src:parent/src:children/rdf:first ?tspec .
  #       }
  #     }

  #   } GROUP BY ?dtor ?bid ?tspec
  # }

  # {
  #   SELECT DISTINCT ?use ?bid
  #   WHERE {

  #     ?use a cpp:Entity ;
  #          cpp:inContainerUnit ?cu ;
  #          src:binding ?bid .

  #     FILTER NOT EXISTS {
  #       ?use a cpp:Declarator .
  #     }

  #   } GROUP BY ?use ?bid
  # }

  # FILTER (?use != ?dtor)

}
